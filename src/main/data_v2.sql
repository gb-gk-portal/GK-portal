-- MySQL Script generated by MySQL Workbench
-- Wed Jan 23 00:36:58 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema geek_market
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema geek_market
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `geek_market` DEFAULT CHARACTER SET latin1 ;
USE `geek_market` ;

-- -----------------------------------------------------
-- Table `geek_market`.`flats`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `geek_market`.`flats` (
  `id` INT(11) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `square` INT(11) NOT NULL COMMENT 'дом',
  `rooms` INT(11) NOT NULL COMMENT 'подъезд',
  `owner_count` INT(11) NOT NULL COMMENT 'этаж',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `num` (`square` ASC, `rooms` ASC, `owner_count` ASC) VISIBLE,
  INDEX `num_build` (`owner_count` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 1698
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `geek_market`.`user_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `geek_market`.`user_type` (
  `id` INT(11) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `geek_market`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `geek_market`.`users` (
  `id` INT(11) NOT NULL,
  `user_type_id` INT(11) NOT NULL,
  `active` TINYINT(1) NOT NULL,
  `first_name` VARCHAR(255) NOT NULL,
  `middle_name` VARCHAR(45) NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `phone` VARCHAR(11) NOT NULL,
  `confirmed` TINYINT(1) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_users_user_type_idx` (`user_type_id` ASC) VISIBLE,
  CONSTRAINT `fk_users_user_type`
    FOREIGN KEY (`user_type_id`)
    REFERENCES `geek_market`.`user_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `geek_market`.`users_flats`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `geek_market`.`users_flats` (
  `users_id` INT(11) NOT NULL,
  `flats_id` INT(11) NOT NULL,
  PRIMARY KEY (`users_id`, `flats_id`),
  INDEX `fk_users_has_flats_flats1_idx` (`flats_id` ASC) VISIBLE,
  CONSTRAINT `fk_users_has_flats_flats1`
    FOREIGN KEY (`flats_id`)
    REFERENCES `geek_market`.`flats` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_has_flats_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `geek_market`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `geek_market`.`mail_service`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `geek_market`.`mail_service` (
  `user_id` INT NOT NULL,
  `users_id` INT(11) NOT NULL,
  `code` VARCHAR(45) NOT NULL,
  `confirmed` TINYINT(1) NOT NULL,
  `generated_at` DATE NOT NULL,
  PRIMARY KEY (`user_id`),
  UNIQUE INDEX `mail_code_UNIQUE` (`code` ASC) VISIBLE,
  INDEX `fk_mail_service_users1_idx` (`users_id` ASC) VISIBLE,
  CONSTRAINT `fk_mail_service_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `geek_market`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `geek_market`.`sms_service`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `geek_market`.`sms_service` (
  `user_id` INT NOT NULL,
  `users_id` INT(11) NOT NULL,
  `code` VARCHAR(45) NOT NULL,
  `confirmed` TINYINT(1) NOT NULL,
  `generated_at` DATE NOT NULL,
  PRIMARY KEY (`user_id`),
  INDEX `fk_sms_service_users1_idx` (`users_id` ASC) VISIBLE,
  CONSTRAINT `fk_sms_service_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `geek_market`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `geek_market`.`telegram_service`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `geek_market`.`telegram_service` (
  `user_id` INT NOT NULL,
  `users_id` INT(11) NOT NULL,
  `code` VARCHAR(45) NOT NULL,
  `confirmed` TINYINT(1) NOT NULL,
  `generated_at` DATE NOT NULL,
  PRIMARY KEY (`user_id`),
  INDEX `fk_telegram_service_users1_idx` (`users_id` ASC) VISIBLE,
  CONSTRAINT `fk_telegram_service_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `geek_market`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `geek_market`.`password`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `geek_market`.`password` (
  `id` INT NOT NULL,
  `users_id` INT(11) NOT NULL,
  `password` CHAR(80) NOT NULL,
  `valid` DATE NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_password_users1_idx` (`users_id` ASC) VISIBLE,
  CONSTRAINT `fk_password_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `geek_market`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `geek_market`.`flat_post`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `geek_market`.`flat_post` (
  `id` INT NOT NULL,
  `flats_id` INT(11) NOT NULL,
  `house` INT NOT NULL,
  `porch` INT NOT NULL,
  `flor` INT NOT NULL,
  `flat` INT NOT NULL,
  `riser` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_flat_post_flats1_idx` (`flats_id` ASC) VISIBLE,
  CONSTRAINT `fk_flat_post_flats1`
    FOREIGN KEY (`flats_id`)
    REFERENCES `geek_market`.`flats` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `geek_market`.`flat_build`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `geek_market`.`flat_build` (
  `id` INT NOT NULL,
  `flats_id` INT(11) NOT NULL,
  `flat` INT NOT NULL,
  `house` INT NOT NULL,
  `porch` INT NOT NULL,
  INDEX `fk_flat_build_flats1_idx` (`flats_id` ASC) VISIBLE,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_flat_build_flats1`
    FOREIGN KEY (`flats_id`)
    REFERENCES `geek_market`.`flats` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `geek_market`.`build_porch_config`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `geek_market`.`build_porch_config` (
  `house` INT(11) NOT NULL COMMENT 'номер дома',
  `porch` INT(11) NOT NULL COMMENT 'номер подъезда',
  `floors_count` INT(11) NOT NULL COMMENT 'кол-во этажей',
  `flat_floor_` INT(11) NOT NULL COMMENT 'кол-во квартир на этаже',
  `flat_from_floor` INT(11) NOT NULL COMMENT 'с какого этажа начинаются квартиры',
  `flat_quatity_start_floor` INT(11) NOT NULL COMMENT 'кол-во квартир на стартовом этаже',
  `record_builded` BIT(1) NOT NULL DEFAULT b'0' COMMENT 'записи квартир созданы, фильтр для отбора рабочих записей',
  `porch_num_from_right` BIT(1) NOT NULL DEFAULT b'0' COMMENT 'нумерация квартир справа, а не слева внутри подъезда как везде',
  `housing_num_from_right` BIT(1) NOT NULL DEFAULT b'0' COMMENT 'строительная нумерация справа по этажно через весь дом, а не слева как в остальных',
  `ident_flat_count` INT(11) NOT NULL DEFAULT '0' COMMENT 'квартир с известными собственниками',
  `build_housing` INT(11) NOT NULL COMMENT 'строительный номер дома',
  `build_porch` INT(11) NOT NULL COMMENT 'строительный номер подъезда, про запас',
  PRIMARY KEY (`house`, `porch`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
